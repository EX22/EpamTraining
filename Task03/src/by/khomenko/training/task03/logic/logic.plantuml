@startuml

title __LOGIC's Class Diagram__\n

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      abstract class CommonParser {
          # setNextCommonParser()
          {abstract} + parseIt()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class ExpressionCalc {
          + calculateBinaryExpression()
          - calc()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class ExpressionParser {
          {static} - LOGGER : Logger
          {static} - REG_EXP_BINARY_EXPRESSION : String
          - operators : Set<String>
          - delimiters : Set<String>
          + flag : boolean
          + ExpressionParser()
          - isDelimiter()
          - isOperator()
          - priority()
          - tokenize()
          + parseBinExp()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class Functionality {
          + sortParagraphBySentencesAmount()
          + sortWordsByLength()
          + sortLexemeBySymbol()
          + restoreText()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class LexemeParser {
          {static} - REG_EXP_LEXEME : String
          + LexemeParser()
          + parseIt()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class ParagraphParser {
          {static} - REG_EXP_PARAGRAPH : String
          + ParagraphParser()
          + parseIt()
          - splitter()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class SentenceParser {
          {static} - REG_EXP_SENTENCE : String
          + SentenceParser()
          + parseIt()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class SymbolParser {
          + parseIt()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class TextParser {
          + TextParser()
          + parseIt()
      }
    }
  }
  

  package by.khomenko.training.task03 {
    package by.khomenko.training.task03.logic {
      class WordExpressionSymbolParser {
          {static} - REG_EXP_BIN_EXPRESSION : String
          {static} - REG_EXP_WORD : String
          {static} - REG_EXP_PUNCTUATION : String
          {static} - REG_EXP : String
          + WordExpressionSymbolParser()
          + parseIt()
      }
    }
  }
  

  CommonParser o-- CommonParser : nextCommonParser
  LexemeParser -up-|> CommonParser
  ParagraphParser -up-|> CommonParser
  SentenceParser -up-|> CommonParser
  SymbolParser -up-|> CommonParser
  TextParser -up-|> CommonParser
  WordExpressionSymbolParser -up-|> CommonParser


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
